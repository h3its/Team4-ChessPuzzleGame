name: Docker Image CI

on:
  push:
    tags: [ "v*.*.*" ]

defaults:
  run:
    shell: bash
    
env:
  python-version: "3.9"

jobs:

  build-backend:

    #spinning up an ubuntu machine
    runs-on: ubuntu-latest
    # need access to github container registry
    permissions:
      contents: read
      packages: write
      
    steps:
    # checkout tagged version of vode
    - uses: actions/checkout@v3
      with:
        ref: "${{ github.ref_name }}"
      
    - name: Login to Github GHCR
      uses: docker/login-action@v1
      with: 
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    # automatically tag docker container
    - name: extract metadata
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: ghcr.io/h3its/chess

    - name: Build and Publish
      uses: docker/build-push-action@v3
      with:
        context: backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
  build-frontend:
    needs: build-backend
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write
          
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            platform-name: windows.x64
            build-cmd: |
              ./frontend/build.sh
              echo $PWD
              ls -al
              ls -al dist/
            output-file-name: ./dist/chessgame.exe
            output-file-ext: .exe
          - os: macos-latest
            platform-name: macos.x64
            build-cmd: |
              ./frontend/build.sh
              cd dist/
              echo $PWD
              ls -al
              zip -r9 chessgame chessgame.app/
              ls -al
            output-file-name: ./dist/chessgame.zip
            output-file-ext: .zip
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set archive name
        run: |
          ARCHIVE_NAME=chessgame-`git describe --always`-${{ matrix.platform-name }}${{ matrix.output-file-ext }}
          echo "Archive name set to: $ARCHIVE_NAME"
          echo "archive-name=$ARCHIVE_NAME" >> $GITHUB_ENV
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.python-version }}
          cache: 'pip'
          
      - name: Install Python dependencies
        run: |
          pip install -r frontend/requirements.txt
      - name: Run Build 
        run: ${{matrix.build-cmd}}
      - name: Create name for upload release
        run: |
          ls -al dist
          echo "$PWD"
          cp ${{matrix.output-file-name}} ${{env.archive-name}}
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.archive-name }}
        
  
  
